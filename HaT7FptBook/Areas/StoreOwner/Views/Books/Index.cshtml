@model IList<HaT7FptBook.Models.Book>

@{
    ViewBag.Title = "View all Product";
    Layout = "_Layout";
}

@* <form class="form-inline my-2 my-lg-0 float-right"> *@
@*     <input id="myInput" class="form-control mr-sm-2" type="text" placeholder="Search"> *@
@* </form> *@

@if (Model.Any())
{
    <h2 class="text-center">List Product</h2>
    <form asp-action="Index" method="get">
        <div class="d-flex flex-row justify-content-between mt-3">
            <div>
                <a asp-controller="Books" asp-action="UpSert" class="btn btn-primary">Create new product</a>
            </div>

            <div class="d-flex">
                <input
                    oninvalid="InvalidMsg(this);" oninput="InvalidMsg(this);"
                    type="text" name="SearchString" value="@ViewData["CurrentFilter"]"
                    required pattern="\S+.*" placeholder=""
                    class="w-49 mr-1"/>
                <button type="submit" value="Search" class="btn btn-primary mr-1">Search</button>
                <a asp-action="Index" class="btn btn-info mr-1">Back to List</a>
            </div>

        </div>
    </form>

    <table style="width: 100%" class="table table-striped">
        <thead>
        <tr>
            <th>No. </th>
            <th>Name</th>
            <th>Description</th>
            <th>Author</th>
            <th>No Page</th>
            <th>Price</th>
            <th>Category Name</th>
            <th>Action</th>
        </tr>
        </thead>

        <tbody id="tblData">
        @{ var i = 1; }
        @foreach (var product in @Model)
        {
            <tr>
                <th scope="row">@i</th>
                <td>@product.Title</td>
                <td>@product.Description</td>
                <td>@product.Author</td>
                <td>@product.NoPage</td>
                <td>@product.Price</td>
                <td>@product.Category.Name</td>

                <td>
                    <a asp-controller="Books" asp-action="UpSert" asp-route-id="@product.Id" class="btn btn-info">Edit</a>
                    <a asp-controller="Books" asp-action="Details" asp-route-id="@product.Id" class="btn btn-info">Detail</a>
                    <a asp-controller="Books" asp-action="Delete" asp-route-id="@product.Id" class="btn btn-danger" onclick="return confirm('Do you want delete this item?')">Delete</a>
                </td>
            </tr>
            i++;
        }
        </tbody>
    </table>

    <div style="display:flex;text-align:center;justify-content:center">
        <nav aria-label="Page navigation example">
            <ul class="pagination">
                @for (var x = 0; x < @ViewBag.numberOfPages; x++)
                {
                    var style = (ViewBag.currentPage == @x) ? "active" : "";
                    <li class="page-item @style">
                        <a class="page-link" asp-route-id="@x" asp-route-searchString="@ViewData["CurrentFilter"]">@(x + 1)</a>
                    </li>
                }
            </ul>
        </nav>
    </div>
}
else
{
    <h2 class="text-center">No Value Product</h2>
    <div class="text-center">
        <a asp-controller="Books" asp-action="UpSert" class="btn btn-primary">Create new Product</a>
    </div>
    <partial name="_StatusMessenger" model="@ViewData["Message"]"/>
}

<script>
        function InvalidMsg(textbox) {

            if (textbox.value === '') {
                textbox.setCustomValidity
                      ('Type something in here to search');
            }
            else {
                textbox.setCustomValidity('');
            }

            return true;
        }
</script>

@* @section Scripts *@
@* { *@
@*     <script> *@
@*     $(document).ready(function(){ *@
@*             $("#myInput").on("keyup", function() { *@
@*                 var value = $(this).val().toLowerCase(); *@
@*                 $("#tblData tr").filter(function() { *@
@*                     $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1) *@
@*                 }); *@
@*             }); *@
@*         }); *@
@*     </script> *@
@* } *@